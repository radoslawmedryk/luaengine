//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Corebyte.LuaEngineNS.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Corebyte.LuaEngineNS.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to local INSTANCES = {} -- [instanceID] = {instanceID, coroutine, status}
        ///local CHUNKS = {} -- [chunkID] = {chunkID, chunkFunction}
        ///
        ///local SANDBOX_ENV = {}
        ///local INCOMING = nil
        ///local outgoingNeedsReset = true
        ///local OUTGOING = nil
        ///
        ///-- conts:
        ///-- CCA_ : CompilationControlAction
        ///local CCA_CompileNew = 0
        ///local CCA_RemoveCompiled = 1
        ///
        ///-- CS_ : CompilationStatus
        ///local CS_AwaitingCompilation = 0
        ///local CS_CompiledOK = 1
        ///local CS_CompileError = 2
        ///
        ///-- ES_ : ExecutionStatus
        ///local ES_Running = 0
        ///local E [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string coroutines {
            get {
                return ResourceManager.GetString("coroutines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function InitializeSandboxEnv()
        ///    local ENV = {
        ///		print=print,
        ///		wait=wait,
        ///		
        ///		assert=assert,
        ///		error=error,
        ///		ipairs=ipairs,
        ///		next=next,
        ///		pairs=pairs,
        ///		pcall=pcall,
        ///		select=select,
        ///		tonumber=tonumber,
        ///		tostring=tostring,
        ///		type=type,
        ///		_VERSION=_VERSION,
        ///		xpcall=xpcall,
        ///		coroutine = {	create = coroutine.create, resume = coroutine.resume, 
        ///						--[[/!\ running = coroutine.running,]] status = coroutine.status, 
        ///						wrap = coroutine.wrap, yield = coroutine.yield
        ///					},
        ///		s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sandbox_env {
            get {
                return ResourceManager.GetString("sandbox_env", resourceCulture);
            }
        }
    }
}
